{
    // Place your embeddedsoftware workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    //header file
    "template.h": {
        "prefix": "TEMPLATE_HEADER_C",
        "body": [
            "/** @copyright Copyright (C) ${company}, Inc - All Rights Reserved",
            " * Unauthorized copying of this file, via any medium is strictly prohibited",
            " * Proprietary and confidential.",
            " * @author    ${author}",
            " * @date      $CURRENT_MONTH-$CURRENT_YEAR",
            " */",
            "/**",
            " *  @file ${TM_FILENAME}",
            " *  @brief",
            " *  @pre",
            " *  @details",
            " */",
            "",
            "#ifndef _${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H_",
            "#define _${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H_",
            "",
            "#ifdef __cplusplus",
            "extern \"C\" {",
            "#endif",
            "",
            "/*********************",
            " *      INCLUDES",
            " *********************/",
            "",
            "/*********************",
            " *      DEFINES",
            " *********************/",
            "",
            "/**********************",
            " *     TYPEDEFS",
            " **********************/",
            "",
            "/**********************",
            " *  GLOBAL MACROS",
            " **********************/",
            "",
            "/**********************",
            " *  GLOBAL VARIABLES",
            " **********************/",
            "",
            "/**********************",
            " *  GLOBAL PROTOTYPES",
            " **********************/",
            "",
            "/**********************",
            " *   ERROR ASSERT",
            "**********************/",
            "",
            "#ifdef __cplusplus",
            "}",
            "#endif",
            "",
            "#endif /* _${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H_ */",
            ""
        ],
        "description": "C header file template"
    },
    //Source file
    "template.c": {
        "prefix": "TEMPLATE_SOURCE_C",
        "body": [
            "/** @copyright Copyright (C) ${company}, Inc - All Rights Reserved",
            " * Unauthorized copying of this file, via any medium is strictly prohibited",
            " * Proprietary and confidential.",
            " * @author    ${author}",
            " * @date      $CURRENT_MONTH-$CURRENT_YEAR",
            " */",
            "",
            "/*********************",
            " *      INCLUDES",
            " *********************/",
            "#include \"${TM_FILENAME_BASE}.h\"",
            "",
            "/*********************",
            " *      DEFINES",
            " *********************/",
            "",
            "/**********************",
            " *      TYPEDEFS",
            " **********************/",
            "",
            "/**********************",
            " *  STATIC PROTOTYPES",
            " **********************/",
            "",
            "/**********************",
            " *  STATIC VARIABLES",
            " **********************/",
            "",
            "/**********************",
            " *      MACROS",
            " **********************/",
            "",
            "/**********************",
            " *  GLOBAL VARIABLES",
            " **********************/",
            "",
            "/**********************",
            " *   GLOBAL FUNCTIONS",
            " **********************/",
            "",
            "/**********************",
            " *   STATIC FUNCTIONS",
            " **********************/",
            "",
            "/**********************",
            " *   ERROR ASSERT",
            "**********************/",
        ],
        "description": "C source file template"
    }
}
